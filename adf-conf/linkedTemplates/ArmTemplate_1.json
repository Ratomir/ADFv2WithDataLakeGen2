{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-conf"
		},
		"adl_users_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "users.csv"
		},
		"adl_users_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "user"
		},
		"adls_hd_conf_19_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hdinsightsconfv2.dfs.core.windows.net/"
		},
		"asd_LogADF_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sql-logadf"
		},
		"asd_conf19_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sql-awadf"
		},
		"ats_conf19_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "asc-conf19"
		},
		"adlsv2_binaryfile_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().location"
		},
		"adlsv2_binaryfile_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "datastore"
		},
		"adlsv2_binatcopy_input_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"adlsv2_binatcopy_input_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "datastore/input"
		},
		"hdinsight_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ratomir"
		},
		"hdinsightclusterv2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ratomir"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adl_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adl_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "StreetAddress",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('adl_users_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('adl_users_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_hd_conf_19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_hd_conf_19_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "adlshdconf19"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asd_LogADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('asd_LogADF_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asd_conf19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('asd_conf19_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ats_conf19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ats_conf19_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataToCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data to CosmosDB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartCopyToCosmos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Prop_0": "movieid",
									"Prop_1": "title",
									"Prop_2": "ratings",
									"Prop_5": "imdblink",
									"Prop_6": "tmdblink"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adl_input_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "acd_conf19_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StartCopyToCosmos",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_insertIntoLogs]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyToCosmos",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data to CosmosDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_finishAdf]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete files with ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Please input a folder path as the parameter for this pipeline, and the pipeline will delete files which were last modified more than 30 days ago under the particular folder path.",
				"activities": [
					{
						"name": "DeleteFiles",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "abs_conf19_delete",
								"type": "DatasetReference",
								"parameters": {
									"FolderPath": {
										"value": "@pipeline().parameters.FolderPath",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "abs_conf19",
									"type": "LinkedServiceReference"
								},
								"path": "deletelogs"
							},
							"enableLogging": true,
							"recursive": true
						}
					}
				],
				"concurrency": 2,
				"parameters": {
					"FolderPath": {
						"type": "String",
						"defaultValue": "/<mycontainer>/<myfolder>/"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FaildPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartFaildPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "faildlocation"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_input",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "somenewfiles"
								}
							}
						]
					},
					{
						"name": "SendFaildMessage",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-55.northeurope.logic.azure.com:443/workflows/7f90d349b54547efaca83e8fcf31d2e0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gi0mIWDWAy5f1hRQTq--KNb2HXFaMb6mUu-GTDPoFnY",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('httpBody')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "httpBody",
							"value": {
								"value": "@concat('{\n    \"message\": \"', activity('CopyData').error.message, '\",\n    \"dataFactoryName\": \"', pipeline().DataFactory, '\",\n    \"pipelineName\": \"', pipeline().Pipeline, '\",\n    \"receiver\": \"', pipeline().parameters.receiver, '\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartFaildPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_insertIntoLogs]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndFaildPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_finishAdf]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "ratomir@live.com"
					}
				},
				"variables": {
					"httpBody": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsv2_binaryfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_hd_conf_19",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"location": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": {
						"value": "[parameters('adlsv2_binaryfile_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('adlsv2_binaryfile_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_hd_conf_19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsv2_binatcopy_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_hd_conf_19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": "[parameters('adlsv2_binatcopy_input_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('adlsv2_binatcopy_input_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_hd_conf_19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsv2_delimitedtext')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_hd_conf_19",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"location": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().location",
							"type": "Expression"
						},
						"fileSystem": "datalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_hd_conf_19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asd_stageusers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "StreetAddress",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "UserId",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[StageUsers]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_ProductWithCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LastPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "nvarchar"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PC_Name",
						"type": "nvarchar"
					},
					{
						"name": "PC_ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[ProductWithCategory]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Id",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Name",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Email",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "StreetAddress",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "City",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Country",
						"type": "String",
						"precision": 255,
						"scale": 255
					}
				],
				"typeProperties": {
					"tableName": "sourceTbl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[Product]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_productcategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[ProductCategory]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/at_top10RelevanceTagPerMovie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ats_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "relevance",
						"type": "Double"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "title"
					}
				],
				"typeProperties": {
					"tableName": "top10RelevanceTagPerMovie"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ats_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hdinsight')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://hd-conf-19.azurehdinsight.net",
					"userName": "[parameters('hdinsight_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "hdinsight-password"
					},
					"isEspEnabled": false,
					"fileSystem": "datalake",
					"linkedServiceName": {
						"referenceName": "adls_hd_conf_19",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_hd_conf_19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hdinsightclusterv2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://hd-conf-19v2.azurehdinsight.net",
					"userName": "[parameters('hdinsightclusterv2_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "hdinsight-password"
					},
					"isEspEnabled": false,
					"fileSystem": "hivequeryjobs",
					"linkedServiceName": {
						"referenceName": "adls_hd_conf_19",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_hd_conf_19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAndMergeDataToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartToCopyMergeDataSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "TRUNCATE TABLE dbo.StageUsers",
								"sqlWriterStoredProcedureName": "[[dbo].[sp_UpdateUsers]",
								"sqlWriterTableType": "StageTbl"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Id": "Id",
									"Name": "Name",
									"Email": "Email",
									"StreetAddress": "StreetAddress",
									"City": "City",
									"Country": "Country"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ast_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StartToCopyMergeDataSQL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_insertIntoLogs]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyMergeDataSQL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_finishAdf]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ast_Users')]",
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		}
	]
}